{"version":3,"sources":["BottomSheetV2.tsx"],"names":["React","useCallback","useMemo","useState","Modal","StyleSheet","View","TouchableWithoutFeedback","Animated","useSharedValue","withSpring","useAnimatedStyle","useAnimatedGestureHandler","withTiming","runOnJS","useCode","call","gestureHandlerRootHOC","PanGestureHandler","useUpdateEffect","useColors","HANDLE_HEIGHT","Content","children","height","initialHeight","visible","onDismiss","onClose","onOpen","open","background","divider","c","default","y","value","doOpenAnimation","damping","doCloseAnimation","duration","gestureHandler","onStart","_","ctx","startY","onActive","event","translationY","onEnd","animatedStyle","transform","translateY","backgroundColor","content","borderTopLeftRadius","borderTopRightRadius","overflow","width","alignItems","justifyContent","styles","handle","flex","WrappedContent","BottomSheet","modalVisible","setModalVisible","handleClose","container","mask","create","borderRadius"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useState } from 'react';\nimport {\n  Modal,\n  StyleSheet,\n  View,\n  TouchableWithoutFeedback,\n} from 'react-native';\n\nimport Animated, {\n  useSharedValue,\n  withSpring,\n  useAnimatedStyle,\n  useAnimatedGestureHandler,\n  withTiming,\n  runOnJS,\n  useCode,\n  call,\n} from 'react-native-reanimated';\n\nimport {\n  gestureHandlerRootHOC,\n  PanGestureHandler,\n  PanGestureHandlerGestureEvent,\n} from 'react-native-gesture-handler';\n\nimport { useUpdateEffect } from 'react-use';\n\nimport { useColors } from '@nomada-sh/react-native-eyecandy-theme';\n\nconst HANDLE_HEIGHT = 40;\n\ntype Context = {\n  startY: number;\n};\n\nexport interface ContentProps {\n  children?: React.ReactNode;\n  height: number;\n  visible?: boolean;\n  onDismiss?: () => void;\n  onClose?: () => void;\n  onOpen?: () => void;\n}\n\nfunction Content({\n  children,\n  height: initialHeight,\n  visible,\n  onDismiss,\n  onClose,\n  onOpen,\n}: ContentProps) {\n  const height = useSharedValue(initialHeight);\n  const open = useSharedValue(false);\n\n  const { background, divider } = useColors(c => ({\n    background: c.background.default,\n    divider: c.divider.default,\n  }));\n  const y = useSharedValue(height.value);\n\n  const doOpenAnimation = useCallback(() => {\n    'worklet';\n\n    open.value = true;\n\n    y.value = withSpring(0, { damping: 12 }, () => {\n      onOpen && runOnJS(onOpen)();\n    });\n  }, [onOpen, open, y]);\n\n  const doCloseAnimation = useCallback(() => {\n    'worklet';\n\n    open.value = false;\n\n    y.value = withTiming(height.value, { duration: 300 }, () => {\n      onClose && runOnJS(onClose)();\n    });\n  }, [height, onClose, open, y]);\n\n  const gestureHandler = useAnimatedGestureHandler<\n    PanGestureHandlerGestureEvent,\n    Context\n  >({\n    onStart: (_, ctx) => {\n      ctx.startY = y.value;\n    },\n    onActive: (event, ctx) => {\n      y.value = ctx.startY + event.translationY;\n    },\n    onEnd: event => {\n      if (height.value / 3 - event.translationY < 0) {\n        onDismiss && runOnJS(onDismiss)();\n      }\n\n      y.value = withSpring(0);\n    },\n  });\n\n  const animatedStyle = useAnimatedStyle(() => {\n    return {\n      transform: [{ translateY: y.value }],\n      height: height.value * 2,\n      backgroundColor: background.content,\n      borderTopLeftRadius: 32,\n      borderTopRightRadius: 32,\n      overflow: 'hidden',\n    };\n  });\n\n  useCode(\n    () =>\n      call([], () => {\n        if (visible && !open.value) {\n          doOpenAnimation();\n        } else if (!visible && open.value) {\n          doCloseAnimation();\n        }\n      }),\n    [visible, open],\n  );\n\n  return (\n    <PanGestureHandler onGestureEvent={gestureHandler}>\n      <Animated.View style={animatedStyle}>\n        <View\n          style={{\n            height: HANDLE_HEIGHT,\n            width: '100%',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <View\n            style={[\n              styles.handle,\n              {\n                backgroundColor: divider,\n              },\n            ]}\n          />\n        </View>\n        <View\n          style={{\n            flex: 1,\n          }}\n        >\n          {children}\n        </View>\n        <View\n          style={{\n            width: '100%',\n            height: height.value,\n          }}\n        />\n      </Animated.View>\n    </PanGestureHandler>\n  );\n}\n\nconst WrappedContent = gestureHandlerRootHOC(Content);\n\nexport interface BottomSheetProps {\n  children?: React.ReactNode;\n  visible?: boolean;\n  height: number;\n  onClose?: () => void;\n}\n\nfunction BottomSheet({\n  children,\n  visible,\n  height: initialHeight,\n  onClose,\n}: BottomSheetProps) {\n  const height = useMemo(() => initialHeight + HANDLE_HEIGHT, [initialHeight]);\n  const [modalVisible, setModalVisible] = useState<boolean | undefined>(\n    visible,\n  );\n\n  const handleClose = useCallback(() => {\n    setModalVisible(false);\n  }, []);\n\n  useUpdateEffect(() => {\n    if (visible) setModalVisible(visible);\n  }, [visible]);\n\n  return (\n    <Modal\n      animationType=\"fade\"\n      visible={modalVisible}\n      statusBarTranslucent\n      transparent\n      onRequestClose={onClose}\n    >\n      <View\n        style={[\n          styles.container,\n          {\n            backgroundColor: 'rgba(0,0,0,0.5)',\n          },\n        ]}\n      >\n        <TouchableWithoutFeedback onPress={onClose}>\n          <View style={styles.mask} />\n        </TouchableWithoutFeedback>\n        <View\n          style={{\n            height,\n          }}\n        >\n          <WrappedContent\n            height={height}\n            visible={visible}\n            onDismiss={onClose}\n            onClose={handleClose}\n          >\n            {children}\n          </WrappedContent>\n        </View>\n      </View>\n    </Modal>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'flex-end',\n  },\n  mask: {\n    flex: 1,\n  },\n  handle: {\n    height: 6,\n    width: 64,\n    borderRadius: 3,\n  },\n});\n\nexport default BottomSheet;\n"]}