{"version":3,"sources":["RBSheet.tsx"],"names":["React","Component","View","KeyboardAvoidingView","Modal","TouchableOpacity","Animated","PanResponder","StyleSheet","Platform","SUPPORTED_ORIENTATIONS","RBSheet","constructor","props","state","modalVisible","animatedHeight","Value","pan","ValueXY","panResponder","create","createPanResponder","setModalVisible","visible","height","minClosingHeight","openDuration","closeDuration","onClose","onOpen","setState","spring","toValue","useNativeDriver","start","timing","duration","setValue","x","y","closeOnDragDown","onStartShouldSetPanResponder","onPanResponderMove","e","gestureState","dy","event","onPanResponderRelease","_","open","close","render","animationType","dragFromTopOnly","closeOnPressMask","closeOnPressBack","children","customStyles","keyboardAvoidingViewEnabled","panStyle","transform","getTranslateTransform","styles","wrapper","mask","panHandlers","container","draggableContainer","draggableIcon","OS","flex","backgroundColor","width","overflow","alignItems","borderRadius","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  View,\n  KeyboardAvoidingView,\n  Modal,\n  TouchableOpacity,\n  Animated,\n  PanResponder,\n  StyleProp,\n  ViewStyle,\n  ModalProps,\n  PanResponderInstance,\n  StyleSheet,\n  Platform,\n} from 'react-native';\n\nconst SUPPORTED_ORIENTATIONS: ModalProps['supportedOrientations'] = [\n  'portrait',\n  'portrait-upside-down',\n  'landscape',\n  'landscape-left',\n  'landscape-right',\n];\n\nexport interface RBSheetProps {\n  animationType: 'none' | 'fade' | 'slide';\n  height: number;\n  minClosingHeight: number;\n  openDuration: number;\n  closeDuration: number;\n  closeOnDragDown: boolean;\n  dragFromTopOnly: boolean;\n  closeOnPressMask: boolean;\n  closeOnPressBack: boolean;\n  keyboardAvoidingViewEnabled: boolean;\n  onClose: () => void;\n  onOpen: () => void;\n  customStyles: {\n    wrapper?: StyleProp<ViewStyle>;\n    container?: StyleProp<ViewStyle>;\n    draggableIcon?: StyleProp<ViewStyle>;\n  };\n  children?: React.ReactNode;\n  grantThreshold?: number;\n}\n\nexport interface RBSheetState {\n  modalVisible: boolean;\n  animatedHeight: Animated.Value;\n  pan: Animated.ValueXY;\n}\n\nclass RBSheet extends Component<RBSheetProps, RBSheetState> {\n  static defaultProps: Omit<RBSheetProps, 'children'> = {\n    animationType: 'none',\n    height: 260,\n    minClosingHeight: 0,\n    openDuration: 300,\n    closeDuration: 200,\n    closeOnDragDown: false,\n    dragFromTopOnly: false,\n    closeOnPressMask: true,\n    closeOnPressBack: true,\n    keyboardAvoidingViewEnabled: Platform.OS === 'ios',\n    customStyles: {},\n    onClose: () => {},\n    onOpen: () => {},\n  };\n\n  panResponder: PanResponderInstance;\n\n  constructor(props: RBSheetProps) {\n    super(props);\n\n    this.state = {\n      modalVisible: false,\n      animatedHeight: new Animated.Value(0),\n      pan: new Animated.ValueXY(),\n    };\n\n    this.panResponder = PanResponder.create({});\n\n    this.createPanResponder(props);\n  }\n\n  setModalVisible(visible: boolean) {\n    const {\n      height,\n      minClosingHeight,\n      openDuration,\n      closeDuration,\n      onClose,\n      onOpen,\n    } = this.props;\n\n    const { animatedHeight, pan } = this.state;\n\n    if (visible) {\n      this.setState({ modalVisible: visible });\n\n      onOpen?.();\n\n      // Animated.timing(animatedHeight, {\n      //   useNativeDriver: false,\n      //   toValue: height,\n      //   duration: openDuration,\n      // }).start();\n      Animated.spring(animatedHeight, {\n        toValue: height,\n        useNativeDriver: false,\n      }).start();\n    } else {\n      Animated.timing(animatedHeight, {\n        useNativeDriver: false,\n        toValue: minClosingHeight,\n        duration: closeDuration,\n      }).start(() => {\n        pan.setValue({ x: 0, y: 0 });\n        this.setState({\n          modalVisible: visible,\n          animatedHeight: new Animated.Value(0),\n        });\n\n        onClose?.();\n      });\n    }\n  }\n\n  createPanResponder(props: RBSheetProps) {\n    const { closeOnDragDown = false, height, onClose } = props;\n    const { pan } = this.state;\n\n    this.panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: () => closeOnDragDown,\n      onPanResponderMove: (e, gestureState) => {\n        if (gestureState.dy > 0) {\n          Animated.event([null, { dy: pan.y }], { useNativeDriver: false })(\n            e,\n            gestureState,\n          );\n        }\n      },\n      onPanResponderRelease: (_, gestureState) => {\n        if (height / 4 - gestureState.dy < 0) onClose?.();\n\n        Animated.spring(pan, {\n          toValue: { x: 0, y: 0 },\n          useNativeDriver: false,\n        }).start();\n      },\n    });\n  }\n\n  open() {\n    this.setModalVisible(true);\n  }\n\n  close() {\n    this.setModalVisible(false);\n  }\n\n  render() {\n    const {\n      animationType,\n      closeOnDragDown,\n      dragFromTopOnly,\n      closeOnPressMask,\n      closeOnPressBack,\n      children,\n      customStyles = {},\n      keyboardAvoidingViewEnabled,\n      onClose,\n    } = this.props;\n\n    const { animatedHeight, pan, modalVisible } = this.state;\n\n    const panStyle = {\n      transform: pan.getTranslateTransform(),\n    };\n\n    return (\n      <Modal\n        transparent\n        animationType={animationType}\n        visible={modalVisible}\n        supportedOrientations={SUPPORTED_ORIENTATIONS}\n        onRequestClose={() => {\n          if (closeOnPressBack) onClose?.();\n        }}\n      >\n        <KeyboardAvoidingView\n          enabled={keyboardAvoidingViewEnabled}\n          behavior=\"padding\"\n          style={[styles.wrapper, customStyles.wrapper]}\n        >\n          <TouchableOpacity\n            style={styles.mask}\n            activeOpacity={1}\n            onPress={() => (closeOnPressMask ? this.close() : null)}\n          />\n          <Animated.View\n            {...(!dragFromTopOnly && this.panResponder.panHandlers)}\n            style={[\n              panStyle,\n              styles.container,\n              { height: animatedHeight },\n              customStyles.container,\n            ]}\n          >\n            {closeOnDragDown && (\n              <View\n                {...(dragFromTopOnly && this.panResponder.panHandlers)}\n                style={styles.draggableContainer}\n              >\n                <View\n                  style={[styles.draggableIcon, customStyles.draggableIcon]}\n                />\n              </View>\n            )}\n            {children}\n          </Animated.View>\n        </KeyboardAvoidingView>\n      </Modal>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    flex: 1,\n    backgroundColor: '#00000077',\n  },\n  mask: {\n    flex: 1,\n    backgroundColor: 'transparent',\n  },\n  container: {\n    backgroundColor: '#fff',\n    width: '100%',\n    height: 0,\n    overflow: 'hidden',\n  },\n  draggableContainer: {\n    width: '100%',\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  draggableIcon: {\n    width: 35,\n    height: 5,\n    borderRadius: 5,\n    margin: 10,\n    backgroundColor: '#ccc',\n  },\n});\n\nexport default RBSheet;\n"]}