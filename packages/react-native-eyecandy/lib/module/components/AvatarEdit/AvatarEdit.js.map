{"version":3,"sources":["AvatarEdit.tsx"],"names":["React","useCallback","Pressable","StyleSheet","launchCamera","launchImageLibrary","Avatar","IconButton","Camera","useColors","ActionSheet","ms","AvatarEdit","style","size","source","onPress","onChange","props","colors","c","background","default","onImageSelected","res","errorCode","JSON","stringify","didCancel","assets","onActionSheetSelect","index","options","mediaType","launch","then","catch","console","error","handlePress","e","optionsIOS","optionsAndroid","cancelButtonIndex","onCancelAndroidIndex","title","width","height","borderRadius","borderWidth","borderColor","content","styles","cameraIconButton","create","position","bottom","right"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useCallback } from 'react';\nimport {\n  GestureResponderEvent,\n  Pressable,\n  PressableProps,\n  StyleProp,\n  StyleSheet,\n  ViewStyle,\n} from 'react-native';\n\nimport {\n  ImageLibraryOptions,\n  ImagePickerResponse,\n  launchCamera,\n  launchImageLibrary,\n} from 'react-native-image-picker';\n\nimport Avatar, { AvatarProps } from '../Avatar';\nimport IconButton from '../IconButton';\nimport { Camera } from '@nomada-sh/react-native-eyecandy-icons';\nimport { useColors } from '@nomada-sh/react-native-eyecandy-theme';\nimport { ActionSheet } from '../../utils';\n\nimport { ms } from '../../utils';\n\nexport interface AvatarEditProps extends Omit<PressableProps, 'style'> {\n  size?: number;\n  source: AvatarProps['source'];\n  style?: StyleProp<ViewStyle>;\n  onChange?: (assets: ImagePickerResponse['assets']) => void;\n}\n\nfunction AvatarEdit({\n  style,\n  size = ms(100),\n  source,\n  onPress,\n  onChange,\n  ...props\n}: AvatarEditProps) {\n  const colors = useColors(c => c.background.default);\n\n  const onImageSelected = useCallback(\n    (res: ImagePickerResponse) => {\n      if (res.errorCode) throw JSON.stringify(res);\n\n      if (res.didCancel) return;\n\n      onChange?.(res.assets);\n    },\n    [onChange],\n  );\n\n  const onActionSheetSelect = useCallback(\n    index => {\n      if (index === 2) return;\n\n      const options: ImageLibraryOptions = {\n        mediaType: 'photo',\n      };\n\n      const launch = index === 0 ? launchImageLibrary : launchCamera;\n\n      launch(options).then(onImageSelected).catch(console.error);\n    },\n    [onImageSelected],\n  );\n\n  const handlePress = useCallback(\n    (e: GestureResponderEvent) => {\n      ActionSheet(\n        {\n          optionsIOS: ['From Gallery', 'From Camera', 'Cancel'],\n          optionsAndroid: ['From Gallery', 'From Camera'],\n          cancelButtonIndex: 2,\n          onCancelAndroidIndex: 2,\n          title: 'Update Profile Picture',\n        },\n        onActionSheetSelect,\n      );\n\n      onPress?.(e);\n    },\n    [onActionSheetSelect, onPress],\n  );\n\n  return (\n    <Pressable\n      onPress={handlePress}\n      style={[\n        {\n          width: size,\n          height: size,\n          borderRadius: size / 2,\n        },\n        style,\n      ]}\n      {...props}\n    >\n      <Avatar size={size} source={source} />\n      <IconButton\n        style={[\n          {\n            borderWidth: 1.5,\n            borderColor: colors.content,\n          },\n          styles.cameraIconButton,\n        ]}\n        icon={Camera}\n        iconSize={14}\n        size={24}\n        color=\"primary\"\n        onPress={handlePress}\n      />\n    </Pressable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  cameraIconButton: {\n    position: 'absolute',\n    bottom: 2,\n    right: 2,\n  },\n});\n\nexport default AvatarEdit;\n"]}