{"version":3,"sources":["SwipeButton.tsx"],"names":["React","StyleSheet","SwipeButtonBase","Color","useTheme","ChevronRight","ThumbIcon","SwipeButton","titleStyles","containerStyles","thumbIconStyles","title","props","typography","colors","t","button","primary","fillColor","background","rgb","darken","alpha","string","thumbColor","flatten","borderWidth","width","fontSize","body","medium","fontWeight","color","foreground"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,OAAOC,eAAP,MAEO,iBAFP;AAIA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,wCAAzB;AACA,SAASC,YAAT,QAA6B,wCAA7B,C,CAEA;;AAIA,MAAMC,SAAS,GAAG,mBAAM,oBAAC,YAAD;AAAc,EAAA,MAAM,EAAC,OAArB;AAA6B,EAAA,IAAI,EAAE;AAAnC,EAAxB;;AAEA,SAASC,WAAT,OAMqB;AAAA,MANA;AACnBC,IAAAA,WADmB;AAEnBC,IAAAA,eAFmB;AAGnBC,IAAAA,eAHmB;AAInBC,IAAAA,KAAK,GAAG,EAJW;AAKnB,OAAGC;AALgB,GAMA;AACnB,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAyBV,QAAQ,CAACW,CAAC,KAAK;AAC5CF,IAAAA,UAAU,EAAEE,CAAC,CAACF,UAD8B;AAE5CC,IAAAA,MAAM,EAAEC,CAAC,CAACD,MAAF,CAASE,MAAT,CAAgBC;AAFoB,GAAL,CAAF,CAAvC;AAKA,QAAMC,SAAS,GAAGf,KAAK,CAACW,MAAM,CAACK,UAAR,CAAL,CAAyBC,GAAzB,GAA+BC,MAA/B,CAAsC,GAAtC,EAA2CC,KAA3C,CAAiD,GAAjD,EAAsDC,MAAtD,EAAlB;AACA,QAAMC,UAAU,GAAGrB,KAAK,CAACW,MAAM,CAACK,UAAR,CAAL,CAAyBE,MAAzB,CAAgC,GAAhC,EAAqCE,MAArC,EAAnB;AAEA,sBACE,oBAAC,eAAD;AACE,IAAA,KAAK,EAAEZ,KADT;AAEE,IAAA,eAAe,EAAEV,UAAU,CAACwB,OAAX,CAAmB,CAClC;AACEC,MAAAA,WAAW,EAAE,CADf;AAEEC,MAAAA,KAAK,EAAE;AAFT,KADkC,EAKlClB,eALkC,CAAnB,CAFnB;AASE,IAAA,WAAW,EAAER,UAAU,CAACwB,OAAX,CAAmB,CAC9B;AACEG,MAAAA,QAAQ,EAAEf,UAAU,CAACgB,IAAX,CAAgBD,QAAhB,CAAyBE,MADrC;AAEEC,MAAAA,UAAU,EAAE,MAFd;AAGEC,MAAAA,KAAK,EAAElB,MAAM,CAACmB;AAHhB,KAD8B,EAM9BzB,WAN8B,CAAnB,CATf;AAiBE,IAAA,eAAe,EAAEP,UAAU,CAACwB,OAAX,CAAmB,CAClC;AACEC,MAAAA,WAAW,EAAE;AADf,KADkC,EAIlChB,eAJkC,CAAnB,CAjBnB,CAuBE;AAvBF;AAwBE,IAAA,kBAAkB,EAAEJ,SAxBtB;AAyBE,IAAA,mBAAmB,EAAEQ,MAAM,CAACK,UAzB9B;AA0BE,IAAA,uBAAuB,EAAED,SA1B3B;AA2BE,IAAA,mBAAmB,EAAEA,SA3BvB;AA4BE,IAAA,wBAAwB,EAAEM,UA5B5B;AA6BE,IAAA,oBAAoB,EAAEA;AA7BxB,KA8BMZ,KA9BN,EADF;AAkCD;;AAED,eAAeL,WAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet } from 'react-native';\n\nimport SwipeButtonBase, {\n  Props as SwipeButtonBaseProps,\n} from 'rn-swipe-button';\n\nimport Color from 'color';\n\nimport { useTheme } from '@nomada-sh/react-native-eyecandy-theme';\nimport { ChevronRight } from '@nomada-sh/react-native-eyecandy-icons';\n\n// TODO: Fix thumbIconComponent type.\nexport interface SwipeButtonProps\n  extends Omit<SwipeButtonBaseProps, 'thumbIconComponent'> {}\n\nconst ThumbIcon = () => <ChevronRight stroke=\"white\" size={40} />;\n\nfunction SwipeButton({\n  titleStyles,\n  containerStyles,\n  thumbIconStyles,\n  title = '',\n  ...props\n}: SwipeButtonProps) {\n  const { typography, colors } = useTheme(t => ({\n    typography: t.typography,\n    colors: t.colors.button.primary,\n  }));\n\n  const fillColor = Color(colors.background).rgb().darken(0.3).alpha(0.8).string()\n  const thumbColor = Color(colors.background).darken(0.4).string()\n\n  return (\n    <SwipeButtonBase\n      title={title}\n      containerStyles={StyleSheet.flatten([\n        {\n          borderWidth: 0,\n          width: '100%',\n        },\n        containerStyles,\n      ])}\n      titleStyles={StyleSheet.flatten([\n        {\n          fontSize: typography.body.fontSize.medium,\n          fontWeight: 'bold',\n          color: colors.foreground,\n        },\n        titleStyles,\n      ])}\n      thumbIconStyles={StyleSheet.flatten([\n        {\n          borderWidth: 0,\n        },\n        thumbIconStyles,\n      ])}\n      // @ts-ignore\n      thumbIconComponent={ThumbIcon}\n      railBackgroundColor={colors.background}\n      railFillBackgroundColor={fillColor}\n      railFillBorderColor={fillColor}\n      thumbIconBackgroundColor={thumbColor}\n      thumbIconBorderColor={thumbColor}\n      {...props}\n    />\n  );\n}\n\nexport default SwipeButton;\n"]}