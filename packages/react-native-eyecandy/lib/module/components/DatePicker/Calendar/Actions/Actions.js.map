{"version":3,"sources":["Actions.tsx"],"names":["React","useMemo","StyleSheet","View","Body","formatDate","Actions","date","onPressYear","onPressMonth","onPressToday","locale","todayText","month","year","styles","container","monthYearContainer","text","marginEnd","marginStart","defaultProps","create","flexDirection","justifyContent","fontWeight","padding","marginHorizontal","marginTop"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,cAAjC;AAEA,SAASC,IAAT,QAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;AAWA,SAASC,OAAT,OAOiB;AAAA,MAPA;AACfC,IAAAA,IADe;AAEfC,IAAAA,WAFe;AAGfC,IAAAA,YAHe;AAIfC,IAAAA,YAJe;AAKfC,IAAAA,MALe;AAKP;AACRC,IAAAA;AANe,GAOA;AACf,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAkBb,OAAO,CAAC,MAAM;AACpC,WAAO;AACLY,MAAAA,KAAK,EAAER,UAAU,CAACE,IAAD,EAAO,MAAP,EAAeI,MAAf,CADZ;AAELG,MAAAA,IAAI,EAAET,UAAU,CAACE,IAAD,EAAO,MAAP,EAAeI,MAAf;AAFX,KAAP;AAID,GAL8B,EAK5B,CAACJ,IAAD,EAAOI,MAAP,CAL4B,CAA/B;AAOA,sBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACC;AAApB,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE;AAApB,kBACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CACLF,MAAM,CAACG,IADF,EAEL;AACEC,MAAAA,SAAS,EAAE;AADb,KAFK,CADT;AAOE,IAAA,IAAI,EAAC,QAPP;AAQE,IAAA,KAAK,EAAC,SARR;AASE,IAAA,OAAO,EAAEV;AATX,KAWGI,KAXH,CADF,eAcE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CACLE,MAAM,CAACG,IADF,EAEL;AACEE,MAAAA,WAAW,EAAE;AADf,KAFK,CADT;AAOE,IAAA,IAAI,EAAC,QAPP;AAQE,IAAA,KAAK,EAAC,SARR;AASE,IAAA,OAAO,EAAEZ;AATX,KAWGM,IAXH,CAdF,CADF,eA6BE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAEC,MAAM,CAACG,IAFhB;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,OAAO,EAAER;AAJX,KAMGE,SANH,CA7BF,CADF;AAwCD;;AAEDN,OAAO,CAACe,YAAR,GAAuB;AACrBV,EAAAA,MAAM,EAAE,OADa;AAErBC,EAAAA,SAAS,EAAE;AAFU,CAAvB;AAKA,MAAMG,MAAM,GAAGb,UAAU,CAACoB,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,aAAa,EAAE,KADN;AAETC,IAAAA,cAAc,EAAE;AAFP,GADoB;AAK/BP,EAAAA,kBAAkB,EAAE;AAClBM,IAAAA,aAAa,EAAE;AADG,GALW;AAQ/BL,EAAAA,IAAI,EAAE;AACJO,IAAAA,UAAU,EAAE,MADR;AAEJC,IAAAA,OAAO,EAAE,EAFL;AAGJC,IAAAA,gBAAgB,EAAE,EAHd;AAIJC,IAAAA,SAAS,EAAE;AAJP;AARyB,CAAlB,CAAf;AAgBA,eAAetB,OAAf","sourcesContent":["import React, { useMemo } from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport { Body } from '../../../../typography';\nimport formatDate from '../../formatDate';\n\nexport interface ActionsProps {\n  date: Date;\n  onPressYear: () => void;\n  onPressMonth: () => void;\n  onPressToday: () => void;\n  locale: string;\n  todayText: string;\n}\n\nfunction Actions({\n  date,\n  onPressYear,\n  onPressMonth,\n  onPressToday,\n  locale, // = 'en-US',\n  todayText,\n}: ActionsProps) {\n  const { month, year } = useMemo(() => {\n    return {\n      month: formatDate(date, 'MMMM', locale),\n      year: formatDate(date, 'yyyy', locale),\n    };\n  }, [date, locale]);\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.monthYearContainer}>\n        <Body\n          style={[\n            styles.text,\n            {\n              marginEnd: 0,\n            },\n          ]}\n          size=\"xlarge\"\n          color=\"primary\"\n          onPress={onPressMonth}\n        >\n          {month}\n        </Body>\n        <Body\n          style={[\n            styles.text,\n            {\n              marginStart: 0,\n            },\n          ]}\n          size=\"xlarge\"\n          color=\"primary\"\n          onPress={onPressYear}\n        >\n          {year}\n        </Body>\n      </View>\n      <Body\n        size=\"xlarge\"\n        style={styles.text}\n        color=\"primary\"\n        onPress={onPressToday}\n      >\n        {todayText}\n      </Body>\n    </View>\n  );\n}\n\nActions.defaultProps = {\n  locale: 'en-US',\n  todayText: 'Today',\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  monthYearContainer: {\n    flexDirection: 'row',\n  },\n  text: {\n    fontWeight: 'bold',\n    padding: 10,\n    marginHorizontal: 13,\n    marginTop: 6,\n  },\n});\n\nexport default Actions;\n"]}