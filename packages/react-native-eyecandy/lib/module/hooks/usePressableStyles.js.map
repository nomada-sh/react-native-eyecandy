{"version":3,"sources":["usePressableStyles.ts"],"names":["useCallback","usePressableStyles","style","getButtonStyle","e","styles","Array","push","map","s","Function"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAWA,eAAe,SAASC,kBAAT,CAA4BC,KAA5B,EAA4D;AACzE,QAAMC,cAAc,GAAGH,WAAW,CAC/BI,CAAD,IAAmC;AACjC,UAAMC,MAA8B,GAAG,EAAvC;;AAEA,QAAIH,KAAK,YAAYI,KAArB,EAA4B;AAC1BD,MAAAA,MAAM,CAACE,IAAP,CAAYL,KAAK,CAACM,GAAN,CAAUC,CAAC,IAAKA,CAAC,YAAYC,QAAb,GAAwBD,CAAC,CAACL,CAAD,CAAzB,GAA+BK,CAA/C,CAAZ;AACD,KAFD,MAEO,IAAIP,KAAK,YAAYQ,QAArB,EAA+B;AACpCL,MAAAA,MAAM,CAACE,IAAP,CAAYL,KAAK,CAACE,CAAD,CAAjB;AACD,KAFM,MAEA;AACLC,MAAAA,MAAM,CAACE,IAAP,CAAYL,KAAZ;AACD;;AAED,WAAOG,MAAP;AACD,GAb+B,EAchC,CAACH,KAAD,CAdgC,CAAlC;AAiBA,SAAOC,cAAP;AACD","sourcesContent":["import { useCallback } from 'react';\nimport type {\n  PressableStateCallbackType,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\n\ntype StyleType =\n  | StyleProp<ViewStyle>\n  | ((e: PressableStateCallbackType) => StyleProp<ViewStyle>);\n\nexport default function usePressableStyles(style: StyleType[] | StyleType) {\n  const getButtonStyle = useCallback(\n    (e: PressableStateCallbackType) => {\n      const styles: StyleProp<ViewStyle>[] = [];\n\n      if (style instanceof Array) {\n        styles.push(style.map(s => (s instanceof Function ? s(e) : s)));\n      } else if (style instanceof Function) {\n        styles.push(style(e));\n      } else {\n        styles.push(style);\n      }\n\n      return styles;\n    },\n    [style],\n  );\n\n  return getButtonStyle;\n}\n"]}