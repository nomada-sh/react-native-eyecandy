{"version":3,"sources":["useStyles.ts"],"names":["useStyles","color","variant","value","focused","withPaddingStart","colors","c","input","padding","StyleSheet","create","container","borderRadius","borderWidth","borderStyle","overflow","flexDirection","borderColor","indicator","border","background","backgroundColor","undefined","selectContainer","flex","foreground","fontWeight","paddingHorizontal","paddingStart","height","placeholder","iconContainer","justifyContent","icon","fontSize"],"mappings":";;;;;;;AAAA;;AAEA;;AAKe,SAASA,SAAT,OAYZ;AAAA,MAZ0C;AAC3CC,IAAAA,KAAK,GAAG,SADmC;AAE3CC,IAAAA,OAAO,GAAG,SAFiC;AAG3CC,IAAAA,KAH2C;AAI3CC,IAAAA,OAJ2C;AAK3CC,IAAAA;AAL2C,GAY1C;AACD,QAAMC,MAAM,GAAG,yCAAUC,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQP,KAAR,CAAf,CAAf;AACA,QAAMQ,OAAO,GAAG,EAAhB;AAEA,SAAOC,wBAAWC,MAAX,CAAkB;AACvBC,IAAAA,SAAS,EAAE;AACTC,MAAAA,YAAY,EAAE,EADL;AAETC,MAAAA,WAAW,EAAE,CAFJ;AAGTC,MAAAA,WAAW,EAAE,OAHJ;AAITC,MAAAA,QAAQ,EAAE,QAJD;AAKTC,MAAAA,aAAa,EAAE,KALN;AAMTC,MAAAA,WAAW,EAAEd,OAAO,GAChBE,MAAM,CAACF,OAAP,CAAee,SADC,GAEhBjB,OAAO,KAAK,UAAZ,GACAI,MAAM,CAACc,MADP,GAEAd,MAAM,CAACe,UAVF;AAWTC,MAAAA,eAAe,EACbpB,OAAO,KAAK,UAAZ,GACIqB,SADJ,GAEInB,OAAO,GACPE,MAAM,CAACF,OAAP,CAAeiB,UADR,GAEPf,MAAM,CAACe;AAhBJ,KADY;AAmBvBG,IAAAA,eAAe,EAAE;AACfC,MAAAA,IAAI,EAAE;AADS,KAnBM;AAsBvBjB,IAAAA,KAAK,EAAE;AACLP,MAAAA,KAAK,EAAEK,MAAM,CAACoB,UADT;AAELC,MAAAA,UAAU,EAAExB,KAAK,GAAG,KAAH,GAAW,QAFvB;AAGLyB,MAAAA,iBAAiB,EAAE,CAHd;AAILC,MAAAA,YAAY,EAAExB,gBAAgB,GAAGI,OAAH,GAAa,CAJtC;AAKLqB,MAAAA,MAAM,EAAE;AALH,KAtBgB;AA6BvBC,IAAAA,WAAW,EAAE;AACX9B,MAAAA,KAAK,EAAEK,MAAM,CAACyB;AADH,KA7BU;AAgCvBC,IAAAA,aAAa,EAAE;AACbC,MAAAA,cAAc,EAAE,QADH;AAEbL,MAAAA,iBAAiB,EAAEnB;AAFN,KAhCQ;AAoCvByB,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJlC,MAAAA,KAAK,EAAEG,OAAO,GAAGE,MAAM,CAACF,OAAP,CAAee,SAAlB,GAA8BI;AAFxC;AApCiB,GAAlB,CAAP;AAyCD","sourcesContent":["import { StyleSheet } from 'react-native';\n\nimport {\n  ThemeInputColorChoices,\n  useColors,\n} from '@nomada-sh/react-native-eyecandy-theme';\n\nexport default function useStyles<ValueType>({\n  color = 'default',\n  variant = 'default',\n  value,\n  focused,\n  withPaddingStart,\n}: {\n  color?: ThemeInputColorChoices;\n  value?: ValueType;\n  focused?: boolean;\n  withPaddingStart?: boolean;\n  variant?: 'default' | 'outlined';\n}) {\n  const colors = useColors(c => c.input[color]);\n  const padding = 16;\n\n  return StyleSheet.create({\n    container: {\n      borderRadius: 12,\n      borderWidth: 1,\n      borderStyle: 'solid',\n      overflow: 'hidden',\n      flexDirection: 'row',\n      borderColor: focused\n        ? colors.focused.indicator\n        : variant === 'outlined'\n        ? colors.border\n        : colors.background,\n      backgroundColor:\n        variant === 'outlined'\n          ? undefined\n          : focused\n          ? colors.focused.background\n          : colors.background,\n    },\n    selectContainer: {\n      flex: 1,\n    },\n    input: {\n      color: colors.foreground,\n      fontWeight: value ? '700' : 'normal',\n      paddingHorizontal: 0,\n      paddingStart: withPaddingStart ? padding : 0,\n      height: 56,\n    },\n    placeholder: {\n      color: colors.placeholder,\n    },\n    iconContainer: {\n      justifyContent: 'center',\n      paddingHorizontal: padding,\n    },\n    icon: {\n      fontSize: 20,\n      color: focused ? colors.focused.indicator : undefined,\n    },\n  });\n}\n"]}