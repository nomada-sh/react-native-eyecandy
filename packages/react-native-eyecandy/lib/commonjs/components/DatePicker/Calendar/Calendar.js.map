{"version":3,"sources":["Calendar.tsx"],"names":["Calendar","locale","date","onDateChange","width","onGoToYears","onGoToMonths","yearMonthSelectionStep","setYearMonthSelectionStep","todayText","calendar","CalendarBase","getCalendar","year","month","createMonths","getFullYear","getMonth","months","setMonths","onChange","index","nextIndex","prevIndex","current","newMonths","onPressDay","value","Date","day","x","currentDate","goToDate","animated","onPressToday","from","to","same","gestureHandler","onStart","_","ctx","startX","onActive","e","translationX","onEnd","threshold","direction","Math","round","abs","length","next","prev","duration","content","map","onChangeVisibleDate","undefined","flexDirection","flex","React","memo"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useState } from 'react';\nimport type { StyleProp, ViewStyle } from 'react-native';\n\nimport { CalendarDate, Calendar as CalendarBase } from 'calendar-base';\n\nimport Animated, {\n  runOnJS,\n  useAnimatedGestureHandler,\n  useSharedValue,\n  withSpring,\n  withTiming,\n} from 'react-native-reanimated';\n\nimport {\n  PanGestureHandler,\n  PanGestureHandlerGestureEvent,\n} from 'react-native-gesture-handler';\n\nimport Month from './Month';\nimport YearMonthSelection from './YearMonthSelection';\n\nimport wrap from '../wrap';\n\nexport interface CalendarProps {\n  width: number;\n  date: Date;\n  locale?: string;\n  style?: StyleProp<ViewStyle>;\n  debug?: boolean;\n  onGoToYears: () => void;\n  onGoToMonths: () => void;\n  onDateChange?: (date: Date) => void;\n  yearMonthSelectionStep?: 'year' | 'month';\n  setYearMonthSelectionStep?: (step: 'year' | 'month' | undefined) => void;\n  todayText?: string;\n}\n\ntype Context = {\n  startX: number;\n};\n\nfunction Calendar({\n  locale,\n  date,\n  onDateChange,\n  width,\n  onGoToYears,\n  onGoToMonths,\n  yearMonthSelectionStep,\n  setYearMonthSelectionStep,\n  todayText,\n}: CalendarProps) {\n  const calendar = useMemo(() => new CalendarBase(), []);\n\n  const getCalendar = useCallback(\n    (year: number, month: number) => {\n      return calendar.getCalendar(year, month);\n    },\n    [calendar],\n  );\n\n  const createMonths = useCallback((date: Date) => {\n    const year = date.getFullYear();\n    const month = date.getMonth();\n\n    return [\n      {\n        year,\n        month: month - 2,\n      },\n      {\n        year,\n        month: month - 1,\n      },\n      {\n        year,\n        month,\n      },\n      {\n        year,\n        month: month + 1,\n      },\n      {\n        year,\n        month: month + 2,\n      },\n    ];\n  }, []);\n\n  const [months, setMonths] = useState(createMonths(date));\n\n  const onChange = useCallback(\n    (index: number, nextIndex: number, prevIndex: number) => {\n      const current = months[index];\n\n      const newMonths = [...months];\n\n      newMonths[nextIndex] = {\n        year: current.year,\n        month: current.month + 2,\n      };\n      newMonths[prevIndex] = {\n        year: current.year,\n        month: current.month - 2,\n      };\n\n      setMonths(newMonths);\n    },\n    [months],\n  );\n\n  const onPressDay = useCallback(\n    (value: CalendarDate) => {\n      onDateChange?.(new Date(value.year, value.month, value.day));\n    },\n    [onDateChange],\n  );\n\n  const x = useSharedValue(-width);\n  const index = useSharedValue(2);\n\n  const currentDate = useMemo(() => {\n    const current = months[index.value];\n    return new Date(current.year, current.month, 1);\n  }, [index.value, months]);\n\n  const goToDate = useCallback(\n    (date: Date, animated?: boolean) => {\n      // TODO: Improve this\n      setMonths(createMonths(date));\n\n      index.value = 2;\n      // if (animated) x.value = withSpring(-width);\n      // else x.value = -width;\n      x.value = -width;\n    },\n    [createMonths, index, width, x],\n  );\n\n  const onPressToday = useCallback(() => {\n    onDateChange?.(new Date());\n\n    const current = months[index.value];\n\n    const from = new Date(current.year, current.month, 1);\n    const to = new Date();\n\n    const same =\n      to.getFullYear() === from.getFullYear() &&\n      to.getMonth() === from.getMonth();\n\n    if (same) return;\n\n    goToDate(to, true);\n  }, [goToDate, index.value, months, onDateChange]);\n\n  const gestureHandler = useAnimatedGestureHandler<\n    PanGestureHandlerGestureEvent,\n    Context\n  >({\n    onStart: (_, ctx) => {\n      ctx.startX = x.value;\n    },\n    onActive: (e, ctx) => {\n      x.value = ctx.startX + e.translationX;\n    },\n    onEnd: (e, ctx) => {\n      const threshold = width / 3;\n\n      const direction = e.translationX > 0 ? 1 : -1;\n      const startX = Math.round(ctx.startX / width) * width;\n\n      if (Math.abs(e.translationX) > threshold) {\n        index.value = wrap(months.length, index.value - direction);\n        const next = wrap(months.length, index.value + 2);\n        const prev = wrap(months.length, index.value - 2);\n\n        runOnJS(onChange)(index.value, next, prev);\n\n        x.value = withTiming(startX + direction * width, { duration: 300 });\n      } else {\n        x.value = withTiming(startX, { duration: 300 });\n      }\n    },\n  });\n\n  const content = useMemo(() => {\n    return months.map(({ year, month }, index) => {\n      return (\n        <Month\n          key={`${year}-${month}`}\n          onPressDay={onPressDay}\n          onPressToday={onPressToday}\n          onPressYear={onGoToYears}\n          onPressMonth={onGoToMonths}\n          selectedDate={date}\n          month={month}\n          year={year}\n          getCalendar={getCalendar}\n          width={width}\n          locale={locale}\n          index={index}\n          x={x}\n          size={months.length}\n          todayText={todayText}\n        />\n      );\n    });\n  }, [\n    months,\n    onPressDay,\n    onPressToday,\n    onGoToYears,\n    onGoToMonths,\n    date,\n    getCalendar,\n    width,\n    locale,\n    x,\n    todayText,\n  ]);\n\n  const onChangeVisibleDate = useCallback(\n    (date: Date) => {\n      goToDate(date);\n      setYearMonthSelectionStep?.(undefined);\n    },\n    [goToDate, setYearMonthSelectionStep],\n  );\n\n  if (yearMonthSelectionStep)\n    return (\n      <YearMonthSelection\n        onChange={onChangeVisibleDate}\n        step={yearMonthSelectionStep}\n        date={currentDate}\n        selectedDate={date}\n        goToYears={onGoToYears}\n        locale={locale}\n        setStep={setYearMonthSelectionStep}\n      />\n    );\n\n  return (\n    <PanGestureHandler onGestureEvent={gestureHandler}>\n      <Animated.View\n        style={{\n          width,\n          flexDirection: 'row',\n          flex: 1,\n        }}\n      >\n        {content}\n      </Animated.View>\n    </PanGestureHandler>\n  );\n}\n\nexport default React.memo(Calendar);\n"]}