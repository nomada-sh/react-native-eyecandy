{"version":3,"sources":["Header.tsx"],"names":["EN_NAMES","split","ES_NAMES","Header","debug","locale","month","year","count","console","log","current","names","test","styles","container","map","name","index","StyleSheet","create","width","flexDirection","height","textAlignVertical","React","memo"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;;;AASA,MAAMA,QAAQ,GAAG,UAAUC,KAAV,CAAgB,EAAhB,CAAjB;AACA,MAAMC,QAAQ,GAAG,UAAUD,KAAV,CAAgB,EAAhB,CAAjB;;AAEA,SAASE,MAAT,OAA6D;AAAA,MAA7C;AAAEC,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA;AAAxB,GAA6C;AAC3D,QAAMC,KAAK,GAAG,mBAAO,CAAP,CAAd;AACAJ,EAAAA,KAAK,IACHK,OAAO,CAACC,GAAR,CACE,QADF,EAEG,GAAEJ,KAAM,IAAGC,IAAK,GAFnB,EAGE,eAHF,EAIEC,KAAK,CAACG,OAAN,EAJF,CADF;AAQA,QAAMC,KAAK,GAAG,oBAAQ,MAAM;AAC1B,QAAIP,MAAJ,EAAY;AACV,UAAI,sBAAsBQ,IAAtB,CAA2BR,MAA3B,CAAJ,EAAwC,OAAOH,QAAP;AAExC,UAAI,sBAAsBW,IAAtB,CAA2BR,MAA3B,CAAJ,EAAwC,OAAOL,QAAP;AACzC;;AAED,WAAOA,QAAP;AACD,GARa,EAQX,CAACK,MAAD,CARW,CAAd;AAUA,sBACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAES,MAAM,CAACC;AAApB,KACGH,KAAK,CAACI,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1B,wBACE,6BAAC,gBAAD;AACE,MAAA,MAAM,EAAC,MADT;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,KAAK,EAAC,QAHR;AAIE,MAAA,GAAG,EAAEA,KAJP;AAKE,MAAA,KAAK,EAAEJ,MAAM,CAACG;AALhB,OAOGA,IAPH,CADF;AAWD,GAZA,CADH,CADF;AAiBD;;AAED,MAAMH,MAAM,GAAGK,wBAAWC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,KAAK,EAAE,MADE;AAETC,IAAAA,aAAa,EAAE;AAFN,GADoB;AAK/BL,EAAAA,IAAI,EAAE;AACJI,IAAAA,KAAK,EAAE,QADH;AAEJE,IAAAA,MAAM,EAAE,EAFJ;AAGJC,IAAAA,iBAAiB,EAAE;AAHf;AALyB,CAAlB,CAAf;;4BAYeC,eAAMC,IAAN,CAAWvB,MAAX,C","sourcesContent":["import React, { useMemo, useRef } from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport { Body } from '../../../../typography';\n\nexport interface HeaderProps {\n  locale?: string;\n  month?: number;\n  year?: number;\n  debug?: boolean;\n}\n\nconst EN_NAMES = 'SMTWTFS'.split('');\nconst ES_NAMES = 'DLMMJVS'.split('');\n\nfunction Header({ debug, locale, month, year }: HeaderProps) {\n  const count = useRef(1);\n  debug &&\n    console.log(\n      'HEADER',\n      `${month}/${year},`,\n      'RENDER COUNT:',\n      count.current++,\n    );\n\n  const names = useMemo(() => {\n    if (locale) {\n      if (/^es(-[A-Za-z]{2})?$/.test(locale)) return ES_NAMES;\n\n      if (/^en(-[A-Za-z]{2})?$/.test(locale)) return EN_NAMES;\n    }\n\n    return EN_NAMES;\n  }, [locale]);\n\n  return (\n    <View style={styles.container}>\n      {names.map((name, index) => {\n        return (\n          <Body\n            weight=\"bold\"\n            color=\"greyout\"\n            align=\"center\"\n            key={index}\n            style={styles.name}\n          >\n            {name}\n          </Body>\n        );\n      })}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    flexDirection: 'row',\n  },\n  name: {\n    width: '14.28%',\n    height: 40,\n    textAlignVertical: 'center',\n  },\n});\n\nexport default React.memo(Header);\n"]}