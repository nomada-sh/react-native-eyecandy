{"version":3,"sources":["Cell.tsx"],"names":["Cell","React","forwardRef","ref","size","index","value","focused","onPress","props","colors","c","input","default","width","height","borderRadius","backgroundColor","background","borderWidth","borderColor","indicator","overflow","justifyContent","alignItems"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;;;AAWA,MAAMA,IAAI,gBAAGC,eAAMC,UAAN,CACX,OAA0DC,GAA1D,KAAmE;AAAA,MAAlE;AAAEC,IAAAA,IAAI,GAAG,EAAT;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,KAApB;AAA2BC,IAAAA,OAA3B;AAAoCC,IAAAA,OAApC;AAA6C,OAAGC;AAAhD,GAAkE;AACjE,QAAMC,MAAM,GAAG,yCAAUC,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQC,OAAvB,CAAf;AAEA,sBACE,6BAAC,qCAAD;AAA0B,IAAA,OAAO,EAAE,MAAML,OAAN,aAAMA,OAAN,uBAAMA,OAAO,CAAGH,KAAH;AAAhD,kBACE,6BAAC,iBAAD;AACE,IAAA,GAAG,EAAEF,GADP;AAEE,IAAA,KAAK,EAAE;AACLW,MAAAA,KAAK,EAAEV,IADF;AAELW,MAAAA,MAAM,EAAEX,IAFH;AAGLY,MAAAA,YAAY,EAAE,EAHT;AAILC,MAAAA,eAAe,EAAEV,OAAO,GACpBG,MAAM,CAACH,OAAP,CAAeW,UADK,GAEpBR,MAAM,CAACQ,UANN;AAOLC,MAAAA,WAAW,EAAE,CAPR;AAQLC,MAAAA,WAAW,EAAEb,OAAO,GAAGG,MAAM,CAACH,OAAP,CAAec,SAAlB,GAA8BX,MAAM,CAACQ,UARpD;AASLI,MAAAA,QAAQ,EAAE,QATL;AAULC,MAAAA,cAAc,EAAE,QAVX;AAWLC,MAAAA,UAAU,EAAE;AAXP;AAFT,KAeMf,KAfN,gBAiBE,6BAAC,gBAAD;AAAM,IAAA,IAAI,EAAEL,IAAI,GAAG,GAAnB;AAAwB,IAAA,MAAM,EAAC;AAA/B,KACGE,KADH,CAjBF,CADF,CADF;AAyBD,CA7BU,CAAb;;eAgCeN,I","sourcesContent":["import React from 'react';\nimport { View, TouchableWithoutFeedback } from 'react-native';\n\nimport { useColors } from '@nomada-sh/react-native-eyecandy-theme';\nimport { Text } from '../../../typography';\n\nexport interface CellProps {\n  index: number;\n  value: string;\n  size?: number;\n  ref?: React.RefObject<View>;\n  focused?: boolean;\n  onPress?: (index: number) => void;\n}\n\nconst Cell = React.forwardRef<View, CellProps>(\n  ({ size = 56, index, value, focused, onPress, ...props }, ref?) => {\n    const colors = useColors(c => c.input.default);\n\n    return (\n      <TouchableWithoutFeedback onPress={() => onPress?.(index)}>\n        <View\n          ref={ref}\n          style={{\n            width: size,\n            height: size,\n            borderRadius: 12,\n            backgroundColor: focused\n              ? colors.focused.background\n              : colors.background,\n            borderWidth: 1,\n            borderColor: focused ? colors.focused.indicator : colors.background,\n            overflow: 'hidden',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n          {...props}\n        >\n          <Text size={size / 2.5} weight=\"semibold\">\n            {value}\n          </Text>\n        </View>\n      </TouchableWithoutFeedback>\n    );\n  },\n);\n\nexport default Cell;\n"]}