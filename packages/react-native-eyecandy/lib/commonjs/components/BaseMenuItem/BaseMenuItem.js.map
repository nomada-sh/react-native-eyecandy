{"version":3,"sources":["BaseMenuItem.tsx"],"names":["BaseMenuItem","style","icon","iconColor","iconBackgroundColor","separator","onPress","children","background","divider","c","default","rippleColor","container","color","string","backgroundColor","styles","content","StyleSheet","create","paddingHorizontal","flexDirection","alignItems","paddingVertical","text","flex","marginEnd","height","width"],"mappings":";;;;;;;AAAA;;AACA;;AAQA;;AACA;;AACA;;;;AAYA,SAASA,YAAT,OAQsB;AAAA,MARA;AACpBC,IAAAA,KADoB;AAEpBC,IAAAA,IAFoB;AAGpBC,IAAAA,SAHoB;AAIpBC,IAAAA,mBAJoB;AAKpBC,IAAAA,SAAS,GAAG,KALQ;AAMpBC,IAAAA,OANoB;AAOpBC,IAAAA;AAPoB,GAQA;AACpB,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA0B,yCAAUC,CAAC,KAAK;AAC9CF,IAAAA,UAAU,EAAEE,CAAC,CAACF,UAAF,CAAaG,OADqB;AAE9CF,IAAAA,OAAO,EAAEC,CAAC,CAACD,OAAF,CAAUE;AAF2B,GAAL,CAAX,CAAhC;AAKA,QAAMC,WAAW,GAAG,2BAAeJ,UAAU,CAACK,SAA1B,CAApB;AAEA,sBACE,6BAAC,sBAAD;AACE,IAAA,cAAc,EAAE;AACdC,MAAAA,KAAK,EAAEF,WAAW,CAACG,MAAZ;AADO,KADlB;AAIE,IAAA,KAAK,EAAE,CACL;AACEC,MAAAA,eAAe,EAAER,UAAU,CAACK;AAD9B,KADK,EAILI,MAAM,CAACJ,SAJF,EAKLZ,KALK,CAJT;AAWE,IAAA,OAAO,EAAEK;AAXX,kBAaE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEW,MAAM,CAACC;AAApB,KACGhB,IAAI,iBACH,6BAAC,mBAAD;AACE,IAAA,OAAO,EAAC,qBADV;AAEE,IAAA,KAAK,EAAEe,MAAM,CAACf,IAFhB;AAGE,IAAA,WAAW,EAAE;AACXc,MAAAA,eAAe,EAAEZ;AADN,KAHf;AAME,IAAA,IAAI,EAAEF,IANR;AAOE,IAAA,SAAS,EAAEC,SAPb;AAQE,IAAA,IAAI,EAAE,EARR;AASE,IAAA,QAAQ,EAAE,EATZ;AAUE,IAAA,QAAQ,MAVV;AAWE,IAAA,mBAAmB;AAXrB,IAFJ,EAgBGI,QAhBH,CAbF,EA+BGF,SAAS,gBACR,6BAAC,iBAAD;AACE,IAAA,KAAK,EAAE,CACL;AACEW,MAAAA,eAAe,EAAEP;AADnB,KADK,EAILQ,MAAM,CAACZ,SAJF;AADT,IADQ,GASN,IAxCN,CADF;AA4CD;;AAED,MAAMY,MAAM,GAAGE,wBAAWC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,iBAAiB,EAAE;AADV,GADoB;AAI/BH,EAAAA,OAAO,EAAE;AACPI,IAAAA,aAAa,EAAE,KADR;AAEPC,IAAAA,UAAU,EAAE,QAFL;AAGPC,IAAAA,eAAe,EAAE;AAHV,GAJsB;AAS/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE;AADF,GATyB;AAY/BxB,EAAAA,IAAI,EAAE;AACJyB,IAAAA,SAAS,EAAE;AADP,GAZyB;AAe/BtB,EAAAA,SAAS,EAAE;AACTuB,IAAAA,MAAM,EAAE,CADC;AAETC,IAAAA,KAAK,EAAE;AAFE;AAfoB,CAAlB,CAAf;;eAqBe7B,Y","sourcesContent":["import React from 'react';\nimport {\n  Pressable,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport IconButton, { IconButtonProps } from '../IconButton';\nimport { useRippleColor } from '../../hooks';\nimport { useColors } from '@nomada-sh/react-native-eyecandy-theme';\n\nexport interface BaseMenuItemProps {\n  style?: StyleProp<ViewStyle>;\n  icon?: IconButtonProps['icon'];\n  iconColor?: string;\n  iconBackgroundColor?: string;\n  separator?: boolean;\n  onPress?: () => void;\n  children?: React.ReactNode;\n}\n\nfunction BaseMenuItem({\n  style,\n  icon,\n  iconColor,\n  iconBackgroundColor,\n  separator = false,\n  onPress,\n  children,\n}: BaseMenuItemProps) {\n  const { background, divider } = useColors(c => ({\n    background: c.background.default,\n    divider: c.divider.default,\n  }));\n\n  const rippleColor = useRippleColor(background.container);\n\n  return (\n    <Pressable\n      android_ripple={{\n        color: rippleColor.string(),\n      }}\n      style={[\n        {\n          backgroundColor: background.container,\n        },\n        styles.container,\n        style,\n      ]}\n      onPress={onPress}\n    >\n      <View style={styles.content}>\n        {icon && (\n          <IconButton\n            variant=\"transparent-rounded\"\n            style={styles.icon}\n            buttonStyle={{\n              backgroundColor: iconBackgroundColor,\n            }}\n            icon={icon}\n            iconColor={iconColor}\n            size={40}\n            iconSize={22}\n            disabled\n            hideDisabledOverlay\n          />\n        )}\n        {children}\n      </View>\n      {separator ? (\n        <View\n          style={[\n            {\n              backgroundColor: divider,\n            },\n            styles.separator,\n          ]}\n        />\n      ) : null}\n    </Pressable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 20,\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 10,\n  },\n  text: {\n    flex: 1,\n  },\n  icon: {\n    marginEnd: 16,\n  },\n  separator: {\n    height: 1,\n    width: '100%',\n  },\n});\n\nexport default BaseMenuItem;\n"]}