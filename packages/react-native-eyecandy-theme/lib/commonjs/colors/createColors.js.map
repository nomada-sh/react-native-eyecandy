{"version":3,"sources":["createColors.ts"],"names":["createColors","options","variables","dark","Boolean","palette","typography","partialColors","colors","Function","button","text","input","switch","background","divider"],"mappings":";;;;;;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,YAA+B,GAAG,YAAkB;AAAA,MAAjBC,OAAiB,uEAAP,EAAO;AACxD,QAAMC,SAAS,GAAG;AAChBC,IAAAA,IAAI,EAAEC,OAAO,CAACH,OAAO,CAACE,IAAT,CADG;AAEhBE,IAAAA,OAAO,EAAE,4BAAcJ,OAAO,CAACI,OAAtB,CAFO;AAGhBC,IAAAA,UAAU,EAAE,kCAAiBL,OAAO,CAACK,UAAzB;AAHI,GAAlB;AAMA,QAAMC,aAAa,GACjBN,OAAO,CAACO,MAAR,YAA0BC,QAA1B,GACIR,OAAO,CAACO,MAAR,CAAeN,SAAf,CADJ,GAEID,OAAO,CAACO,MAAR,IAAkB,EAHxB;AAKA,SAAO;AACLE,IAAAA,MAAM,EAAE,8BAAgB,EACtB,GAAGR,SADmB;AAEtBM,MAAAA,MAAM,EAAED,aAAa,CAACG;AAFA,KAAhB,CADH;AAKLC,IAAAA,IAAI,EAAE,4BAAc,EAClB,GAAGT,SADe;AAElBM,MAAAA,MAAM,EAAED,aAAa,CAACI;AAFJ,KAAd,CALD;AASLC,IAAAA,KAAK,EAAE,6BAAe,EACpB,GAAGV,SADiB;AAEpBM,MAAAA,MAAM,EAAED,aAAa,CAACK;AAFF,KAAf,CATF;AAaLC,IAAAA,MAAM,EAAE,8BAAgB,EACtB,GAAGX,SADmB;AAEtBM,MAAAA,MAAM,EAAED,aAAa,CAACM;AAFA,KAAhB,CAbH;AAiBLC,IAAAA,UAAU,EAAE,kCAAoB,EAC9B,GAAGZ,SAD2B;AAE9BM,MAAAA,MAAM,EAAED,aAAa,CAACO;AAFQ,KAApB,CAjBP;AAqBLC,IAAAA,OAAO,EAAE,+BAAiB,EACxB,GAAGb,SADqB;AAExBM,MAAAA,MAAM,EAAED,aAAa,CAACQ;AAFE,KAAjB;AArBJ,GAAP;AA0BD,CAtCD;;eAwCef,Y","sourcesContent":["import { CreateThemeColors } from './types';\nimport { createPalette } from '../palette';\nimport { createTypography } from '../typography';\n\nimport getButtonColors from './getButtonColors';\nimport getTextColors from './getTextColors';\nimport getInputColors from './getInputColors';\nimport getSwitchColors from './getSwitchColors';\nimport getBackgroundColors from './getBackgroundColors';\nimport getDividerColors from './getDividerColors';\n\nconst createColors: CreateThemeColors = (options = {}) => {\n  const variables = {\n    dark: Boolean(options.dark),\n    palette: createPalette(options.palette),\n    typography: createTypography(options.typography),\n  };\n\n  const partialColors =\n    options.colors instanceof Function\n      ? options.colors(variables)\n      : options.colors || {};\n\n  return {\n    button: getButtonColors({\n      ...variables,\n      colors: partialColors.button,\n    }),\n    text: getTextColors({\n      ...variables,\n      colors: partialColors.text,\n    }),\n    input: getInputColors({\n      ...variables,\n      colors: partialColors.input,\n    }),\n    switch: getSwitchColors({\n      ...variables,\n      colors: partialColors.switch,\n    }),\n    background: getBackgroundColors({\n      ...variables,\n      colors: partialColors.background,\n    }),\n    divider: getDividerColors({\n      ...variables,\n      colors: partialColors.divider,\n    }),\n  };\n};\n\nexport default createColors;\n"]}